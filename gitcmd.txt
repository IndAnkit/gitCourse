for initailize git repo:-
>>>>>> git init


check status
>>>>>>> git status


to add all file for commit
>>>> add .

to check list of commit
>>>>> git log

only add one file for commit
>>>> git add filename.ext

for uninitailize any git repo
>>> rm -rf .git
  \\


to make any file untrack
>>> git rm --cached filename.ext



to compare working dir and  staging dir
>>> git diff

to compare staging area and last commit
>>> git diff --staged



to ignore staging area( tracked file not untreacked file)
>>>>>> git commit -a -m "message"



how to delete file from git
>>>>>> git rm filename.ext



to rename file name
>>>>> git mv filename.ext newFilename.ext


clone any repo
>>> git clone GitURl foldernme


to see any commit with changes
>>>>>>>>> git log -p
>>>>>>> git log -p -3   (to see last 3 commit with change)

to see sort of commit
>>> git log --stat

to see all commit in oneline
>>>> git log --pretty=oneline
>>>> git log --pretty=sort   (to see in sort)
>>> git log --pretty=full (to see full)

to filter git commit
>>>>>> git log --since=2.days  (weeks,months,years)


to filter git with format
>>>>> git log --pretty=format:"%h --%an"                 (from git scm website formatter)
 

 to add somthing to last commit
 >>>>>>> git commit --ammend
(press i for insert and wq for commit)





>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>git branch>>>>>>>>>>>>>>>>>>>>>>
to create new branch
>> git branch <branch_name>


to switch the branch
>>> git chechout <branch_name>

to delete branch
>>> git branch -d <branch_name>


to rename branch name
>>> git branch -m <old_name> <new_name>

to mearge branch
>>> git merge <branch_name_to_be_mearge>

 to make any file to unstage
>>>>>> git restore --staged <file_name>



to make reverse any change
>> git chechout -- <file_name>

to remove all changes 
>> git chechout -f



alias used for creating  sort form of cmd:-
>>> git config --global alias.<sort_name> '<command name>'
ex:- git config --global alias.st 'status'


